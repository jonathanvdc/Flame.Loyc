using System;
using LeMP;

namespace Test
{
    public class Vector
    {
        public this(public double X, public double Y) { }

        public double LengthSquared
        {
            get { return X * X + Y * Y; }
            set { Length = Math.Sqrt(value); }
        }

        public double Length
        {
            get { return Math.Sqrt(LengthSquared); }
            set
            {
                double ratio = value / Length;
                X *= ratio;
                Y *= ratio;
            }
        }
    }

    public class X
    {
        public int abs(int n)
        {
            if (n >= 0)
                return n;
            else
                return -n;
        }

        public X getThis() { return this; }

        public int factorial(int n)
        {
            if (n <= 0)
                return 1;
            else
                return this.factorial(n - 1) * n;
        }

        public int Never()
        {
            int x = 0;
            do
            {
                continue;
                x++;
            } while (false);
            return x;
        }

        public int Forever()
        {
            int x = 0;
            do
            {
                x++;
            } while (true);
            return x;
        }
    }
}
